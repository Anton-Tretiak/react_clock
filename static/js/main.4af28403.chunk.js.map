{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedDate","value","toUTCString","slice","Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","now","toString","App","clockName","displayClock","clockNameId","clockNameChanger","handleLeftClick","handleRightClick","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUMA,EAAmB,SAACC,GAAD,OAAiBA,EAAMC,cAAcC,OAAO,IAAK,IAE7DC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BG,OAAOG,QAAQC,KAAKd,EAAiB,EAAKK,MAAMC,UAC/C,OAZP,gCAeE,SAAmBS,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJA,IAASD,EAAUC,MACrBN,OAAOG,QAAQK,MAAf,uBACkBH,EAAUC,KAD5B,eACuCA,MApB7C,kCAyBE,WACEG,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAV,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAiBM,YA1C5B,GAA2Be,IAAMC,WCRjC,SAASC,IACP,IAAMtB,EAAQM,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBF,GAQX,IAAMyB,EAAb,4MACErB,MAAQ,CACNsB,UAAW,UACXC,cAAc,GAHlB,EAMEC,YAAc,EANhB,EAsBEC,iBAAmB,WACjB,EAAKlB,SAAS,CAAEe,UAAWJ,OAvB/B,EA0BEQ,gBAAkB,WAChB,EAAKnB,SAAS,CAAEgB,cAAc,KA3BlC,EA8BEI,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEgB,cAAc,KAjClC,uDAQE,WACEnB,KAAKoB,YAAcnB,OAAOC,YAAYF,KAAKqB,iBAAkB,MAE7DK,SAASC,iBAAiB,QAAS3B,KAAKsB,iBACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,oBAZlD,kCAeE,WACEb,cAAcV,KAAKoB,aAEnBM,SAASE,oBAAoB,QAAS5B,KAAKsB,iBAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,oBAnBrD,oBAoCE,WACE,MAAoCvB,KAAKJ,MAAjCuB,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,UAEtB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,KAAMW,WA5CvB,GAAyBN,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.4af28403.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nconst getFormattedDate = (value: Date) => value.toUTCString().slice(-12, -4);\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info(getFormattedDate(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      window.console.debug(\n        `Renamed from ${prevProps.name} to ${name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getFormattedDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  displayClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    displayClock: true,\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    this.clockNameId = window.setInterval(this.clockNameChanger, 3300);\n\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockNameId);\n\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n  }\n\n  clockNameChanger = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ displayClock: true });\n  };\n\n  handleRightClick = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ displayClock: false });\n  };\n\n  render() {\n    const { displayClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {displayClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}